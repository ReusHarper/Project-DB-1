-- LOS CONSTRAINTS DE PRIMARY PUEDEN DECLARARSE EXPLICITAMENTE COMO SI FUESEN UN ATRIBUTO MAS EN LA TABLA
-- O DIRECTAMENTE SE LE PUEDE AGREGAR
--'PRIMARY KEY' AL ATRIBUTO QUE SE QUIERA HACER PK
CREATE TABLE AUTOR (
    id_autor       NUMBER(10)    PRIMARY KEY, /*NOT NULL*/ --AGREGADO PK--------------------CORREGIDO--------------------
	nomA           VARCHAR2(30)  NOT NULL,
	apPA           VARCHAR2(30)  NOT NULL,
	apMA           VARCHAR2(30),
	nacionalidad   VARCHAR2(30)  NOT NULL
);

--SE TIENE  QUE QUITAR ESE ULTIMO CONSTRAINT
/*ALTER TABLE AUTOR ADD CONSTRAINT pk_aut_idAut
PRIMARY KEY (id_autor);*/

CREATE TABLE MATERIAL (
	id_mat         NUMBER(10)    PRIMARY KEY/*NOT NULL*/,--SE AGREGA PK-----------------------CORREGIDO------------------------
	ubicacion      VARCHAR2(30)  NOT NULL,
	titulo         VARCHAR2(30)  NOT NULL,
	colocacion     VARCHAR2(30)  NOT NULL,
    tipoMat        CHAR(1)       NOT NULL,
    CONSTRAINT     ck_mat_tipMat CHECK (tipoMat IN ('L','T'))
);

--SE ELIMINA ESE CONSTRAINT
/*ALTER TABLE MATERIAL ADD CONSTRAINT pk_mat_idMat
PRIMARY KEY (id_mat);*/
--SE ELIMINA ESE CONSTRAINT Y SE AGREGA DIRECTAMENE EN LA CREACION DE LA TABLA
/*ALTER TABLE MATERIAL ADD CONSTRAINT ck_mat_tipMat
CHECK (tipoMat IN ('L','T'));
*/
CREATE TABLE CUENTA (
	/*id_autor_material  NUMBER(4)   NOT NULL,--SE VA A ELIMINAR*/------------------------------CORREGIDO-----------------------
	id_mat         NUMBER(10),
	id_autor       NUMBER(10),
    CONSTRAINT     fk_cue_idMat            FOREIGN KEY (id_mat)   REFERENCES  MATERIAL(id_mat) ON DELETE CASCADE,
    CONSTRAINT     fk_cue_idAut            FOREIGN KEY (id_autor) REFERENCES  AUTOR(id_autor),
    CONSTRAINT     PK_cue_idMatYidAut      PRIMARY KEY (id_mat,id_autor)
);

INSERT INTO CUENTA VALUES();
INSERT INTO CUENTA VALUES();
INSERT INTO CUENTA VALUES();

--SE AGREGAN DIRECTAMENTE ESOS CONSTRAINT EN LA CREACION  DE LA TABLA
/*ALTER TABLE CUENTA ADD CONSTRAINT pk_cue_idAutMat
PRIMARY KEY (id_autor_material);

ALTER TABLE CUENTA ADD CONSTRAINT fk_cue_idMat
FOREIGN KEY (id_mat)
REFERENCES  MATERIAL(id_mat)
ON DELETE CASCADE;

ALTER TABLE CUENTA ADD CONSTRAINT fk_cue_idAut
FOREIGN KEY (id_autor)
REFERENCES  AUTOR(id_autor);
--LOS SIGUIENTES DOS CONSTRAINTS SE VAN A AELIMINAR Y SE HARA UNA PK COMPUESTA
ALTER TABLE CUENTA ADD CONSTRAINT ak_cue_idMat
UNIQUE (id_mat);

ALTER TABLE CUENTA ADD CONSTRAINT ak_cue_idAut
UNIQUE (id_autor);

ALTER TABLE CUENTA DROP CONSTRAINT ak_cue_idAut;
*/

CREATE TABLE LIBRO (
    id_mat     NUMBER(10)    PRIMARY KEY  /*NOT NULL*/,----------------------CORREGIDO----------------
	numAd      NUMBER(10)     NOT NULL,--DEBE DE SER CONSTRAINT UNIQUE
	isbn       VARCHAR2(20)  NOT NULL,--DEBE DE SER CONSTRAINT UNIQUE
	edicion    VARCHAR2(30)  NOT NULL,
	tema       VARCHAR2(30)  NOT NULL,
    CONSTRAINT fk_lib_idMat  FOREIGN KEY (id_mat) REFERENCES  MATERIAL(id_mat) ON DELETE CASCADE,
    CONSTRAINT ak_lib_isbn   UNIQUE (isbn),
    CONSTRAINT ak_lib_numAd  UNIQUE (numAd)
);



--LOS SIG. CONSTRAINTS VAN DENTRO DE LA TABLA
/*ALTER TABLE LIBRO ADD CONSTRAINT pk_lib_idMat
PRIMARY KEY (id_mat);

ALTER TABLE LIBRO ADD CONSTRAINT fk_lib_idMat
FOREIGN KEY (id_mat)
REFERENCES  MATERIAL(id_mat)
ON DELETE CASCADE;

ALTER TABLE LIBRO ADD CONSTRAINT ak_lib_isbn
UNIQUE (isbn);*/

CREATE TABLE DIRECTOR (
	id_dir     NUMBER(10)    PRIMARY KEY/*NOT NULL*/,----------------------CORREGIDO------------------------
	nomD       VARCHAR2(30)  NOT NULL,
	apPD       CHAR(18)      NOT NULL,
	apMD       VARCHAR2(30),
	gdoAcad    VARCHAR2(30)  NOT NULL
);

INSERT INTO DIRECTOR VALUES();

--ESE CONSTRAINT VA DENTRO DE LA TABLA
/*ALTER TABLE DIRECTOR ADD CONSTRAINT pk_dir_idDir
PRIMARY KEY (id_dir);*/

CREATE TABLE TESIS (
    id_mat     NUMBER(10)  PRIMARY KEY/*NOT NULL*/,-----------------------CORREGIDO----------------------
	id_tesis   NUMBER(10),
	carrera    CHAR(18)    NOT NULL,
	anio       DATE        NOT NULL,
	id_dir     NUMBER(10),
    CONSTRAINT fk_tes_idMat      FOREIGN KEY (id_mat) REFERENCES  MATERIAL(id_mat) ON DELETE CASCADE,
    CONSTRAINT fk_tes_idDir      FOREIGN KEY (id_dir) REFERENCES  DIRECTOR(id_dir),
    CONSTRAINT ak_tesis_id_tesis UNIQUE (id_tesis)--LE FALTABA AGREGAR ESE CONSTRAINT
);

INSERT INTO TESIS VALUES(,,'Informatica','2017',);

--ESOS CONSTRAINT VAN DENTRO DE LA TABLA
/*ALTER TABLE TESIS ADD CONSTRAINT pk_tes_idMat
PRIMARY KEY (id_mat);

ALTER TABLE TESIS ADD CONSTRAINT fk_tes_idMat
FOREIGN KEY (id_mat)
REFERENCES  MATERIAL(id_mat)
ON DELETE CASCADE;

ALTER TABLE TESIS ADD CONSTRAINT fk_tes_idDir
FOREIGN KEY (id_dir)
REFERENCES  DIRECTOR(id_dir);*/

CREATE TABLE EJEMPLAR (
	numEj      NUMBER(10)     NOT NULL,
    id_mat     NUMBER(10)     NOT NULL,
	estatus    VARCHAR2(20)   NOT NULL,--AGREGAR CONSTRAINT CHECK---------------------------------CORREGIDO----------------------
    CONSTRAINT fk_eje_idMat   FOREIGN KEY (id_mat) REFERENCES  MATERIAL(id_mat) ON DELETE CASCADE,
    CONSTRAINT pk_eje_nejYidm PRIMARY KEY (numEj,id_mat),
    CONSTRAINT ck_ejemplar    CHECK (estatus IN ('DISPONIBLE','EN PRESTAMO','NO SALE','EN MANTENIMIENTO'))--LE FALTABA EL CONSTRAINT
);

INSERT INTO EJEMPLAR VALUES();
INSERT INTO EJEMPLAR VALUES();
INSERT INTO EJEMPLAR VALUES();

/*
ALTER TABLE EJEMPLAR ADD CONSTRAINT pk_eje_nejYidm
PRIMARY KEY (numEj,id_mat);

ALTER TABLE EJEMPLAR ADD CONSTRAINT fk_eje_idMat
FOREIGN KEY (id_mat)
REFERENCES  MATERIAL(id_mat)
ON DELETE CASCADE;
*/
CREATE TABLE TIPO_LECTOR (
	id_tipo        NUMBER(1) PRIMARY KEY/*NOT NULL*/,-----------------------------CORREGIDO-----------------------------
    tipoLector     CHAR(1)   NOT NULL,
	lim_material   NUMBER(4) NOT NULL,
	lim_dia        NUMBER(4) NOT NULL,
	lim_refrendo   NUMBER(4) NOT NULL,
    CONSTRAINT ck_tle_tipLec CHECK (tipoLector IN ('E','P','I'))
);

INSERT INTO TIPO_LECTOR VALUES();
INSERT INTO TIPO_LECTOR VALUES();
INSERT INTO TIPO_LECTOR VALUES();

/*
ALTER TABLE TIPO_LECTOR ADD CONSTRAINT pk_tle_idTipo
PRIMARY KEY (id_tipo);
--EL CONSTRAIN SE DECLARA EN LA TABLA
ALTER TABLE TIPO_LECTOR ADD CONSTRAINT ck_tle_tipLec
CHECK (tipoLector IN ('E','P','I'));
*/
CREATE TABLE LECTOR (
	id_lector  NUMBER(10)      PRIMARY KEY/*NOT NULL*/,------------------------CORREGIDO-------------------
    nomL       VARCHAR2(30)    NOT NULL,
	apPL       VARCHAR2(30)    NOT NULL,
	apML       CHAR(18),
	f_vig      DATE            NOT NULL,
	f_alta     DATE            NOT NULL,--SYSDATE
	telef      VARCHAR2(30)    NOT NULL,
	calle      VARCHAR2(30)    NOT NULL,
	colonia    CHAR(18)        NOT NULL,
	numero     CHAR(18)        NOT NULL,
	id_tipo    NUMBER(1)       NOT NULL,
    CONSTRAINT fk_lec_idTip FOREIGN KEY (id_tipo) REFERENCES  TIPO_LECTOR(id_tipo) ON DELETE SET NULL
);

INSERT INTO LECTOR VALUES();
INSERT INTO LECTOR VALUES();
INSERT INTO LECTOR VALUES();

/*
ALTER TABLE LECTOR ADD CONSTRAINT pk_lec_idLec
PRIMARY KEY (id_lector);

ALTER TABLE LECTOR ADD CONSTRAINT fk_lec_idTip
FOREIGN KEY (id_tipo)
REFERENCES  TIPO_LECTOR(id_tipo)
ON DELETE SET NULL;  --Duda ahi
*/
-- ALTER TABLE LECTOR DROP CONSTRAINT fk_lec_idTip;

CREATE TABLE PRESTAMO (
	id_prestamo    NUMBER(10)  NOT NULL,
	f_inicio       DATE        NOT NULL,--HACERLOS UNICOS O UNIRLOS EN UNA PK
	f_venci        DATE        NOT NULL,
	multa          NUMBER(4),  --DEBERIA DE SER OPCIONAL LA MULTA
	refre_aut      NUMBER(4),
	f_devol        DATE,
    id_lector      NUMBER(10),--HACERLO UNICO
	numEj          NUMBER(10),--HACERLO UNICO
	id_mat         NUMBER(10),--HACERLO UNICO
    CONSTRAINT fk_pre_nejYidm FOREIGN KEY (numEj,id_mat) REFERENCES  EJEMPLAR (numEj,id_mat) ON DELETE CASCADE,
    CONSTRAINT fk_pre_idLec   FOREIGN KEY (id_lector)    REFERENCES  LECTOR (id_lector),
    CONSTRAINT pk_pre_idPre   PRIMARY KEY (f_inicio,id_lector,numEj,id_mat)--AHORA SI LA PK DE PRESTAMO SE TIENE SENIDO Y ASï¿½ NOS CORROBORAMOS DE QUE LAS PK NO SE REPITAN
);

INSERT INTO PRESTAMO VALUES();
INSERT INTO PRESTAMO VALUES();
INSERT INTO PRESTAMO VALUES();

/*
ALTER TABLE PRESTAMO ADD CONSTRAINT pk_pre_idPre
PRIMARY KEY (id_prestamo);

ALTER TABLE PRESTAMO ADD CONSTRAINT fk_pre_nejYidm
FOREIGN KEY (numEj,id_mat)
REFERENCES  EJEMPLAR (numEj,id_mat)
ON DELETE CASCADE;

ALTER TABLE PRESTAMO ADD CONSTRAINT fk_pre_idLec
FOREIGN KEY (id_lector)
REFERENCES  LECTOR (id_lector);
*/
DROP TABLE AUTOR        CASCADE CONSTRAINTS;
DROP TABLE CUENTA       CASCADE CONSTRAINTS;
DROP TABLE MATERIAL     CASCADE CONSTRAINTS;
DROP TABLE LIBRO        CASCADE CONSTRAINTS;
DROP TABLE TESIS        CASCADE CONSTRAINTS;
DROP TABLE DIRECTOR     CASCADE CONSTRAINTS;
DROP TABLE EJEMPLAR     CASCADE CONSTRAINTS;
DROP TABLE PRESTAMO     CASCADE CONSTRAINTS;
DROP TABLE LECTOR       CASCADE CONSTRAINTS;
DROP TABLE TIPO_LECTOR  CASCADE CONSTRAINTS;
